{"version":3,"sources":["Utils/getInitialUserData.ts","Utils/getRandomId.ts","Components/BaseComponets/ErrorMessage/ErrorMessage.tsx","Services/firebase.ts","Components/BaseComponets/UserCardForm/UserCardForm.tsx","Components/BaseComponets/UserCard/UserCard.tsx","Components/BaseComponets/UserCardWrapper/UserCardWrapper.tsx","Constants/User.ts","Services/mockedData.ts","Components/BaseComponets/Filter/Filter.tsx","Hooks/usePagination.ts","Components/Pages/MainPage/MainPage.tsx","Components/BaseComponets/Header/Header.tsx","Components/BaseComponets/Footer/Footer.tsx","Components/App/App.tsx","index.tsx"],"names":["initialUserValues","id","Math","random","toString","substr","name","surname","email","phone","birthday","credit","ErrorMessage","children","className","config","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","databaseURL","projectId","REACT_APP_PID","storageBucket","REACT_APP_SB","messagingSenderId","REACT_APP_MSID","appId","REACT_APP_APPID","measurementId","REACT_APP_MID","firebase","initializeApp","usersRef","database","ref","UserSchema","yup","shape","max","required","matches","test","value","valid","number","isValid","length","UserCardForm","user","isMainEditForm","handleSaveClick","handleCancelClick","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","push","child","set","then","console","log","catch","error","handleSubmit","type","onChange","handleChange","errors","min","inputMode","onClick","UserCard","handleClick","UserCardWrapper","editFormType","useState","userForm","setUserForm","handleEditClick","mockData","Filter","keyword","input","setKeyword","key","placeholder","e","target","usePagination","data","itemsPerPage","currentPage","setCurrentPage","maxPage","ceil","next","prev","jump","page","pageNumber","currentData","begin","end","slice","MainPage","filterInput","setFilterInput","userListDefault","setUserListDefault","userList","setUserList","count","_DATA","useEffect","on","exists","items","val","newState","Object","keys","forEach","filtered","filter","toLowerCase","includes","map","Pagination","size","variant","Header","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc73ef58.chunk.js","sourcesContent":["import { getRandomId } from './getRandomId'\n\nexport const initialUserValues = {\n  id: getRandomId(),\n  name: '',\n  surname: '',\n  email: '',\n  phone: '',\n  birthday: '',\n  credit: '',\n}\n","export const getRandomId = () => {\n  return '_' + Math.random().toString(36).substr(2, 9)\n}\n","import React from 'react'\nimport './ErrorMessage.scss'\n\nconst ErrorMessage: React.FC = ({ children }) => {\n  return <span className=\"error-message\">{children}</span>\n}\n\nexport default ErrorMessage\n","import firebase from 'firebase/app'\nimport 'firebase/database'\n\nconst config = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  databaseURL:\n    'https://user-list-c0863-default-rtdb.europe-west1.firebasedatabase.app/',\n  projectId: process.env.REACT_APP_PID,\n  storageBucket: process.env.REACT_APP_SB,\n  messagingSenderId: process.env.REACT_APP_MSID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MID,\n}\n\nfirebase.initializeApp(config)\nexport const usersRef = firebase.database().ref('users')\n\nexport default firebase\n","import React from 'react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport valid from 'card-validator'\nimport { User } from '../../../Types/User'\nimport { initialUserValues } from '../../../Utils/getInitialUserData'\nimport ErrorMessage from '../ErrorMessage'\nimport { usersRef } from '../../../Services/firebase'\n\nimport '../UserCard/UserCard.scss'\nimport '../UserCardForm/UserCardForm.scss'\n\nconst phoneRegExp = /^\\+[(]\\d{1,3}[)][ ]\\d{3}-\\d{3}-\\d{2}-\\d{2}$/\nconst UserSchema = yup.object().shape({\n  name: yup.string().max(16).required(),\n  surname: yup.string().max(20).required(),\n  email: yup\n    .string()\n    .email('Please enter your valid email')\n    .required('Please enter your email'),\n  phone: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number is not valid, enter format +({country code}) XXX-XXX-XX-XX',\n    ),\n  credit: yup\n    .string()\n    .test(\n      'test-number',\n      'Credit Card number is invalid',\n      value => valid.number(value).isValid || !value?.length,\n    ),\n})\n\ntype UserCardFormProps = {\n  user?: User\n  isMainEditForm?: boolean\n  handleSaveClick?: () => void\n  handleCancelClick?: () => void\n}\n\nconst UserCardForm: React.FC<UserCardFormProps> = ({\n  user,\n  isMainEditForm,\n  handleSaveClick,\n  handleCancelClick,\n}) => {\n  const formik = useFormik({\n    initialValues: user || initialUserValues,\n    validationSchema: UserSchema,\n    onSubmit: (values, { resetForm }) => {\n      if (isMainEditForm) {\n        usersRef.push(values)\n        resetForm()\n      } else {\n        usersRef\n          .child(`${values.id}`)\n          .set(values)\n          .then(() => console.log('Data added successfully'))\n          .catch(error => console.log('Adding failed with error' + error))\n        if (handleSaveClick) {\n          handleSaveClick()\n        }\n      }\n    },\n  })\n\n  return (\n    <form\n      className={`${isMainEditForm ? 'user__form--main' : ''} user__form`}\n      onSubmit={formik.handleSubmit}\n    >\n      <div className=\"user__info\">\n        <label className=\"user__title\">\n          Name\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            className=\"user__data\"\n          />\n        </label>\n        {formik.errors.name && (\n          <ErrorMessage>{formik.errors.name}</ErrorMessage>\n        )}\n      </div>\n      <div className=\"user__info\">\n        <label className=\"user__title\">\n          Surname\n          <input\n            id=\"surname\"\n            name=\"surname\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.surname}\n            className=\"user__data\"\n          />\n        </label>\n        {formik.errors.surname && (\n          <ErrorMessage>{formik.errors.surname}</ErrorMessage>\n        )}\n      </div>\n      <div className=\"user__info\">\n        <label className=\"user__title\">\n          Email\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            className=\"user__data\"\n          />\n        </label>\n        {formik.errors.email && (\n          <ErrorMessage>{formik.errors.email}</ErrorMessage>\n        )}\n      </div>\n      <div className=\"user__info\">\n        <label className=\"user__title\">\n          Phone\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"tel\"\n            onChange={formik.handleChange}\n            value={formik.values.phone}\n            className=\"user__data\"\n          />\n        </label>\n        {formik.errors.phone && (\n          <ErrorMessage>{formik.errors.phone}</ErrorMessage>\n        )}\n      </div>\n      <div className=\"user__info\">\n        <label className=\"user__title\">\n          Birthday\n          <input\n            id=\"birthday\"\n            name=\"birthday\"\n            type=\"date\"\n            onChange={formik.handleChange}\n            value={formik.values.birthday}\n            className=\"user__data\"\n            min=\"1950-01-01\"\n            max=\"2018-12-31\"\n          />\n        </label>\n      </div>\n      <div className=\"user__info\">\n        <label className=\"user__title\">\n          Credit card\n          <input\n            id=\"credit\"\n            name=\"credit\"\n            type=\"text\"\n            inputMode=\"numeric\"\n            onChange={formik.handleChange}\n            value={formik.values.credit || ''}\n            className=\"user__data\"\n          />\n        </label>\n        {formik.errors.credit && (\n          <ErrorMessage>{formik.errors.credit}</ErrorMessage>\n        )}\n      </div>\n      {isMainEditForm ? (\n        <button type=\"submit\" className=\"user__btn--create\">\n          Create\n        </button>\n      ) : (\n        <div>\n          <button type=\"submit\" className=\"user__btn--save\">\n            Save\n          </button>\n          <button\n            type=\"button\"\n            className=\"user__btn--cancel\"\n            onClick={handleCancelClick}\n          >\n            Cancel\n          </button>\n        </div>\n      )}\n    </form>\n  )\n}\n\nexport default UserCardForm\n","import React from 'react'\nimport { User } from '../../../Types/User'\nimport './UserCard.scss'\n\ntype UserCardProps = {\n  user: User\n  handleClick: () => void\n}\n\nconst UserCard: React.FC<UserCardProps> = ({ user, handleClick }) => {\n  return (\n    <li className=\"user\">\n      <div className=\"user__info\">\n        <span className=\"user__title\">Name</span>\n        <span className=\"user__data\">{user.name}</span>\n      </div>\n      <div className=\"user__info\">\n        <span className=\"user__title\">Surname</span>\n        <span className=\"user__data\">{user.surname}</span>\n      </div>\n      <div className=\"user__info\">\n        <span className=\"user__title\">Email</span>\n        <span className=\"user__data\">{user.email}</span>\n      </div>\n      {user.phone && (\n        <div className=\"user__info\">\n          <span className=\"user__title\">Phone</span>\n          <span className=\"user__data\">{user.phone}</span>\n        </div>\n      )}\n      {user.birthday && (\n        <div className=\"user__info\">\n          <span className=\"user__title\">Birthday</span>\n          <span className=\"user__data\">{user.birthday}</span>\n        </div>\n      )}\n      {user.credit && (\n        <div className=\"user__info\">\n          <span className=\"user__title\">Credit card</span>\n          <span className=\"user__data\">{user.credit}</span>\n        </div>\n      )}\n\n      <button className=\"user__btn--edit\" type=\"button\" onClick={handleClick}>\n        Edit info\n      </button>\n    </li>\n  )\n}\n\nexport default UserCard\n","import React, { useState } from 'react'\nimport UserCardForm from '../UserCardForm'\nimport UserCard from '../UserCard'\nimport { User } from '../../../Types/User'\nimport { MAIN_EDIT_FORM_TYPE } from '../../../Constants/User'\nimport { initialUserValues } from '../../../Utils/getInitialUserData'\n\ntype UserCardWrapperProps = Partial<{\n  user: User\n  editFormType: string\n}>\n\nconst UserCardWrapper: React.FC<UserCardWrapperProps> = ({\n  user,\n  editFormType,\n}) => {\n  const [userForm, setUserForm] = useState<boolean>()\n\n  const handleEditClick = () => {\n    setUserForm(true)\n  }\n\n  const handleSaveClick = () => {\n    setUserForm(false)\n  }\n\n  const handleCancelClick = () => {\n    setUserForm(false)\n  }\n\n  const isMainEditForm = (formType: string) => {\n    return editFormType === formType\n  }\n\n  const renderUserCard = () => {\n    if (userForm) {\n      return (\n        <li className=\"user\">\n          <UserCardForm\n            user={user}\n            handleSaveClick={handleSaveClick}\n            handleCancelClick={handleCancelClick}\n          />\n        </li>\n      )\n    } else if (isMainEditForm(MAIN_EDIT_FORM_TYPE)) {\n      return <UserCardForm isMainEditForm />\n    } else {\n      return (\n        <UserCard\n          user={user || initialUserValues}\n          handleClick={handleEditClick}\n        />\n      )\n    }\n  }\n\n  return <>{renderUserCard()}</>\n}\n\nexport default UserCardWrapper\n","export const MAIN_EDIT_FORM_TYPE = 'main-form'\nexport const PER_PAGE = 6\n","export const mockData = [\n  {\n    id: '1',\n    name: 'Leanne',\n    surname: 'Bret',\n    email: 'Sincere@april.biz',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n  {\n    id: '2',\n    name: 'Ervin',\n    surname: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n  {\n    id: '3',\n    name: 'Clementine',\n    surname: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n  {\n    id: '4',\n    name: 'Patricia',\n    surname: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n  {\n    id: '5',\n    name: 'Chelsey',\n    surname: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n  {\n    id: '6',\n    name: 'Dennis',\n    surname: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n  {\n    id: '7',\n    name: 'Kurtis',\n    surname: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n  {\n    id: '8',\n    name: 'Nicholas V',\n    surname: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n  {\n    id: '9',\n    name: 'Glenna',\n    surname: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n  {\n    id: '10',\n    name: 'Clementina',\n    surname: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    phone: '+(38) 055-055-55-55',\n    birthday: '19.11.1997',\n    credit: '4149 4940 4940 4940',\n  },\n]\n","import React from 'react'\nimport './Filter.scss'\n\ntype FilterProps = {\n  input: string\n  onChange: (e: string) => void\n}\n\nconst Filter: React.FC<FilterProps> = ({\n  input: keyword,\n  onChange: setKeyword,\n}) => {\n  return (\n    <div className=\"filter\">\n      <input\n        className=\"filter__input\"\n        key=\"key123\"\n        value={keyword}\n        placeholder={'Search user name'}\n        onChange={e => setKeyword(e.target.value)}\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","import { useState } from 'react'\nimport { User } from '../Types/User'\n\nconst usePagination = (data: User[], itemsPerPage: number) => {\n  const [currentPage, setCurrentPage] = useState(1)\n  const maxPage = Math.ceil(data.length / itemsPerPage)\n\n  const currentData = () => {\n    const begin = (currentPage - 1) * itemsPerPage\n    const end = begin + itemsPerPage\n    return data.slice(begin, end)\n  }\n\n  const next = () => {\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage))\n  }\n\n  const prev = () => {\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 1))\n  }\n\n  const jump = (page: number) => {\n    const pageNumber = Math.max(1, page)\n    setCurrentPage(Math.min(pageNumber, maxPage))\n  }\n\n  return { next, prev, jump, currentData, currentPage, maxPage }\n}\n\nexport default usePagination\n","import React, { useEffect, useState } from 'react'\nimport UserCardWrapper from '../../BaseComponets/UserCardWrapper'\nimport { mockData } from '../../../Services/mockedData'\nimport { User } from '../../../Types/User'\nimport Filter from '../../BaseComponets/Filter'\nimport { MAIN_EDIT_FORM_TYPE, PER_PAGE } from '../../../Constants/User'\nimport { Pagination } from '@material-ui/lab'\nimport usePagination from '../../../Hooks/usePagination'\nimport { usersRef } from '../../../Services/firebase'\nimport './MainPage.scss'\n\nconst MainPage = () => {\n  const [filterInput, setFilterInput] = useState('')\n  const [userListDefault, setUserListDefault] = useState<User[]>([])\n  const [userList, setUserList] = useState<User[]>([])\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const count = Math.ceil(userList.length / PER_PAGE)\n  const _DATA = usePagination(userList, PER_PAGE)\n\n  const handleChange = (e: React.ChangeEvent<unknown>, page: number) => {\n    setCurrentPage(page)\n    return _DATA?.jump(page)\n  }\n\n  const updateInput = (input: string) => {\n    const filtered = userListDefault?.filter(user => {\n      return user.name.toLowerCase().includes(input.toLowerCase())\n    })\n    setFilterInput(input)\n    setUserList(filtered)\n  }\n\n  useEffect(() => {\n    usersRef.on(\n      'value',\n      data => {\n        if (data.exists()) {\n          const items = data.val()\n          const newState: User[] = []\n          if (items) {\n            Object.keys(items).forEach(key => {\n              newState.push({ ...items[key], id: key })\n            })\n          }\n          setUserList(newState)\n          setUserListDefault(newState)\n        } else {\n          setUserList(mockData)\n          setUserListDefault(mockData)\n        }\n      },\n      (error: Error) => {\n        console.log(error)\n      },\n    )\n  }, [])\n\n  return (\n    <main>\n      <Filter input={filterInput} onChange={updateInput} />\n      <UserCardWrapper editFormType={MAIN_EDIT_FORM_TYPE} />\n      <ul className=\"list\">\n        {_DATA?.currentData().map(user => (\n          <UserCardWrapper key={user.id} user={user} />\n        ))}\n      </ul>\n      <Pagination\n        count={count}\n        size=\"large\"\n        page={currentPage}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        onChange={handleChange}\n        className=\"pagination\"\n      />\n    </main>\n  )\n}\n\nexport default MainPage\n","import React from 'react'\n\nimport './Header.scss'\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h2>User List</h2>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nimport './Footer.scss'\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text\">&copy; 2021 by Anna Tsukanova</p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport MainPage from '../Pages/MainPage'\nimport Header from '../BaseComponets/Header'\nimport Footer from '../BaseComponets/Footer'\nimport './App.scss'\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainPage />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './Components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}